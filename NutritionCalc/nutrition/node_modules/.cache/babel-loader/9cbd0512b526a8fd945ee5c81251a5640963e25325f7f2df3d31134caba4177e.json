{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\rizla\\\\projects\\\\react\\\\NutritionCalc\\\\nutrition\\\\src\\\\components\\\\ViewCapsule.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport axios from 'axios'; //used to \"get\" from database\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function ViewCapsule(input) {\n  _s();\n  //creates state to store variables\n  const [state, setState] = useState({\n    fname: '',\n    Title: '',\n    City: '',\n    State: '',\n    Country: '',\n    Msg: '',\n    Time: '',\n    EndTime: '',\n    users: []\n  });\n  const handleChange = e => {\n    setState({\n      ...state,\n      [e.target.name]: e.target.value\n    });\n  };\n  let [inSearch, setSearch] = React.useState(false); //orignally, system is not searching for query, and user inputs filters\n\n  function search() {\n    //if filters are added, system uses axios.get to send parameters to the backend, logs results, and displays data\n    console.log(state.Time);\n    console.log(state.EndTime);\n    /** \n    axios.get('/users', { params: { fname: state.fname, sTime: state.Time, eTime: state.EndTime, Country: state.Country, City: state.City, State: state.State, Title: state.Title, Msg: state.Msg } }) \n    .then((response) => {\n      const data = response.data;\n      setState({ users: data }); \n      console.log('Data has been received!!');\n            })  \n    .catch(() => {\n      console.log('Error retrieving data!!!');\n    });\n    \n    setSearch(true)\n    }\n    function displayUsers (users) {\n     if (!users.length) return null;\n    //html of a formatted map showcasing retrieved data\n           return users.map((users, index) => (\n      <div key={index} className=\"test\">\n        <p> <font size=\"3\">  From {users.City}, {users.State}, {users.Country}</font></p>\n        <p>**************************************</p>\n        <h3>{users.Title} by {users.Name}</h3> \n        <p>Message: {users.Message}</p>\n        <p>**************************************</p>\n        <p><font size=\"3\"> <b>Posted on: {((users.created_at).replace(\"T\", \" at \")).replace(\".000Z\",\"-\")} UTC</b></font> </p>\n        <p>________________________________________________________________________________________________________________________________________________________________________________________________</p>\n        \n       \n      </div>\n    )); */\n  }\n  ;\n  if (inSearch) {\n    return (\n      /*#__PURE__*/\n      //header section for results\n      _jsxDEV(\"div\", {\n        className: \"blog-\",\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"Results:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 12\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"button button1\",\n          onClick: () => input.setPage('home'),\n          children: \"Go Back\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 10\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 8\n      }, this)\n    );\n  } else {\n    return (\n      /*#__PURE__*/\n      // html of search page, what the user first sees. Text input is sent to state variables\n      _jsxDEV(\"div\", {\n        className: \"viewcap\",\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"Enter Capsule\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 17\n        }, this), \"Enter Local Start Date: \", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"date\",\n          name: \"Time\",\n          value: state.Time,\n          onChange: handleChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 41\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 17\n        }, this), \"Enter Local End Date: \", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"date\",\n          name: \"EndTime\",\n          value: state.EndTime,\n          onChange: handleChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 39\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 112,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"button button1\",\n          onClick: () => search(),\n          children: \"Search\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 114,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"button button1\",\n          onClick: () => input.setPage('home'),\n          children: \"Go Back\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 115,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 13\n      }, this)\n    );\n  }\n}\n_s(ViewCapsule, \"O2d0InIS1JjXXywSt0vQipkPS+I=\");\n_c = ViewCapsule;\nvar _c;\n$RefreshReg$(_c, \"ViewCapsule\");","map":{"version":3,"names":["React","useState","axios","ViewCapsule","input","state","setState","fname","Title","City","State","Country","Msg","Time","EndTime","users","handleChange","e","target","name","value","inSearch","setSearch","search","console","log","setPage"],"sources":["C:/Users/rizla/projects/react/NutritionCalc/nutrition/src/components/ViewCapsule.js"],"sourcesContent":["import React, { useState } from \"react\";\nimport axios from 'axios'; //used to \"get\" from database\n\n\n\n\nexport default function ViewCapsule(input){\n\n//creates state to store variables\n      const [state, setState] = useState({ \n           fname:'',\n           Title:'',\n            City:'',\n            State:'',\n            Country:'',\n            Msg:'',\n            Time:'',\n            EndTime:'',\n           users: [],\n         });\n\n\n         \n         const handleChange = e => {\n            setState({\n              ...state,\n              [e.target.name]: e.target.value,\n            })\n          }\n\n    let [inSearch, setSearch] = React.useState(false); //orignally, system is not searching for query, and user inputs filters\n \n\n    function search(){ //if filters are added, system uses axios.get to send parameters to the backend, logs results, and displays data\n        console.log(state.Time);\n        console.log(state.EndTime);\n        /** \n        axios.get('/users', { params: { fname: state.fname, sTime: state.Time, eTime: state.EndTime, Country: state.Country, City: state.City, State: state.State, Title: state.Title, Msg: state.Msg } }) \n        .then((response) => {\n          const data = response.data;\n          setState({ users: data }); \n          console.log('Data has been received!!');\n       \n        })  \n        .catch(() => {\n          console.log('Error retrieving data!!!');\n        });\n        \n        setSearch(true)\n    }\n\n    function displayUsers (users) {\n\n        if (!users.length) return null;\n      \n//html of a formatted map showcasing retrieved data\n      \n        return users.map((users, index) => (\n          <div key={index} className=\"test\">\n            <p> <font size=\"3\">  From {users.City}, {users.State}, {users.Country}</font></p>\n            <p>**************************************</p>\n            <h3>{users.Title} by {users.Name}</h3> \n            <p>Message: {users.Message}</p>\n            <p>**************************************</p>\n            <p><font size=\"3\"> <b>Posted on: {((users.created_at).replace(\"T\", \" at \")).replace(\".000Z\",\"-\")} UTC</b></font> </p>\n            <p>________________________________________________________________________________________________________________________________________________________________________________________________</p>\n            \n           \n          </div>\n        )); */\n      };\n    \n\n    if(inSearch){\n\n\n   return(\n       //header section for results\n       <div className=\"blog-\">\n           <h1>Results:</h1>\n         {/**displayUsers(state.users)*/}\n         <button className=\"button button1\" onClick={() => input.setPage('home')}>Go Back</button>\n       </div>\n     \n    );\n    }\n \n\n        \n       \n\n    \n    else{\n        return(\n            // html of search page, what the user first sees. Text input is sent to state variables\n            <div className=\"viewcap\" >\n                <h1>Enter Capsule</h1>\n          \n                Enter Local Start Date: <input\n                    type=\"date\"\n                    name=\"Time\"\n                    value={state.Time}\n                    onChange={handleChange}\n                />\n                <br/>\n                Enter Local End Date: <input\n                    type=\"date\"\n                    name=\"EndTime\"\n                    value={state.EndTime}\n                    onChange={handleChange}\n                />\n                <br/>\n                \n                <button className=\"button button1\" onClick={() => search()}>Search</button>\n                <button className=\"button button1\" onClick={() => input.setPage('home')}>Go Back</button>\n            </div>\n        )\n    }\n}\n\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,KAAK,MAAM,OAAO,CAAC,CAAC;AAAA;AAK3B,eAAe,SAASC,WAAW,CAACC,KAAK,EAAC;EAAA;EAE1C;EACM,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGL,QAAQ,CAAC;IAC9BM,KAAK,EAAC,EAAE;IACRC,KAAK,EAAC,EAAE;IACPC,IAAI,EAAC,EAAE;IACPC,KAAK,EAAC,EAAE;IACRC,OAAO,EAAC,EAAE;IACVC,GAAG,EAAC,EAAE;IACNC,IAAI,EAAC,EAAE;IACPC,OAAO,EAAC,EAAE;IACXC,KAAK,EAAE;EACT,CAAC,CAAC;EAIF,MAAMC,YAAY,GAAGC,CAAC,IAAI;IACvBX,QAAQ,CAAC;MACP,GAAGD,KAAK;MACR,CAACY,CAAC,CAACC,MAAM,CAACC,IAAI,GAAGF,CAAC,CAACC,MAAM,CAACE;IAC5B,CAAC,CAAC;EACJ,CAAC;EAEP,IAAI,CAACC,QAAQ,EAAEC,SAAS,CAAC,GAAGtB,KAAK,CAACC,QAAQ,CAAC,KAAK,CAAC,CAAC,CAAC;;EAGnD,SAASsB,MAAM,GAAE;IAAE;IACfC,OAAO,CAACC,GAAG,CAACpB,KAAK,CAACQ,IAAI,CAAC;IACvBW,OAAO,CAACC,GAAG,CAACpB,KAAK,CAACS,OAAO,CAAC;IAC1B;AACR;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EAMM;EAAC;EAGH,IAAGO,QAAQ,EAAC;IAGb;MAAA;MACI;MACA;QAAK,SAAS,EAAC,OAAO;QAAA,wBAClB;UAAA,UAAI;QAAQ;UAAA;UAAA;UAAA;QAAA,QAAK,eAEnB;UAAQ,SAAS,EAAC,gBAAgB;UAAC,OAAO,EAAE,MAAMjB,KAAK,CAACsB,OAAO,CAAC,MAAM,CAAE;UAAA,UAAC;QAAO;UAAA;UAAA;UAAA;QAAA,QAAS;MAAA;QAAA;QAAA;QAAA;MAAA;IACrF;EAGT,CAAC,MAOG;IACA;MAAA;MACI;MACA;QAAK,SAAS,EAAC,SAAS;QAAA,wBACpB;UAAA,UAAI;QAAa;UAAA;UAAA;UAAA;QAAA,QAAK,4BAEE;UACpB,IAAI,EAAC,MAAM;UACX,IAAI,EAAC,MAAM;UACX,KAAK,EAAErB,KAAK,CAACQ,IAAK;UAClB,QAAQ,EAAEG;QAAa;UAAA;UAAA;UAAA;QAAA,QACzB,eACF;UAAA;UAAA;UAAA;QAAA,QAAK,0BACiB;UAClB,IAAI,EAAC,MAAM;UACX,IAAI,EAAC,SAAS;UACd,KAAK,EAAEX,KAAK,CAACS,OAAQ;UACrB,QAAQ,EAAEE;QAAa;UAAA;UAAA;UAAA;QAAA,QACzB,eACF;UAAA;UAAA;UAAA;QAAA,QAAK,eAEL;UAAQ,SAAS,EAAC,gBAAgB;UAAC,OAAO,EAAE,MAAMO,MAAM,EAAG;UAAA,UAAC;QAAM;UAAA;UAAA;UAAA;QAAA,QAAS,eAC3E;UAAQ,SAAS,EAAC,gBAAgB;UAAC,OAAO,EAAE,MAAMnB,KAAK,CAACsB,OAAO,CAAC,MAAM,CAAE;UAAA,UAAC;QAAO;UAAA;UAAA;UAAA;QAAA,QAAS;MAAA;QAAA;QAAA;QAAA;MAAA;IACvF;EAEd;AACJ;AAAC,GAhHuBvB,WAAW;AAAA,KAAXA,WAAW;AAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}